/* The First Comment */
let a: i32 = 5 += *7[12, mipt::cat.face, 42.71 / 11.5] - +3 += 9(a, b, c);

// Second comment
let queue: f32;

enum data_state {
    initialized,
    uninitialized = 1,
}

struct vec_queue_data {
    vector  : [f32; 4],
    conv_fn : fn([f32; 4]) f32,
}

struct vec_queue_element {
    value : (queue_data, data_state),
    next  : *mut vec_queue_element,
}

// Main project function
// 'argc' - argument count
// 'argv' - argument values
// Returns exit status
fn main(argc: i32, argv: **u8) i32 {
    let tridcat: i32 = 30.0 as i32;
    let newline_char: char = '\n';

    __builtin_print_str("CGSG FOREVER!!! ");
    __builtin_print_i32(30);
    __builtin_print_str("!!!");
    __builtin_print_char(newline_char);
    return 0;
}

// cum ment
